<!DOCTYPE html>
<html lang="en">
  <head>
    <title>dc.js - Switching Time Intervals</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="../css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="../css/dc.css"/>
  </head>
  <body>

    <div class="container">
      <select id="interval">
        <option>Months</option>
        <option selected>Weeks</option>
        <option>Days</option>
      </select>

      <div id="test"></div>
      <div id="counter"></div>

      <script type="text/javascript" src="../js/d3.js"></script>
      <script type="text/javascript" src="../js/crossfilter.js"></script>
      <script type="text/javascript" src="../js/dc.js"></script>
      <script type="text/javascript">

        var chart = dc.barChart("#test"), counter = dc.numberDisplay('#counter');
        d3.csv("tSpace-forum.csv", function(error, posts) {
            if(error)
                throw new Error(error);

            var datef = d3.time.format('%m/%d');
            posts.forEach(function(d) {
                d.endDate = datef.parse(d.endDate);
                d.total = +d.total;
            });

            var ndx = crossfilter(posts), dateDim, postsGroup;

            var intervals = {
                Months: d3.time.month,
                Weeks: d3.time.week,
                Days: d3.time.day
            };
            function setup() {
                if(dateDim) {
                    dateDim.dispose();
                    postsGroup.dispose();
                }
                var interval = intervals[d3.select('#interval')[0][0].value];
                dateDim = ndx.dimension(function(d) {return interval(d.endDate);});
                chart.xUnits(interval.range);
                postsGroup = dateDim
                    .group()
                    .reduceSum(function(d) { return d.total; });
                chart.dimension(dateDim).group(postsGroup)
                    .render();
            }

            chart
                .width(768)
                .height(480)
                .x(d3.time.scale())
                .xUnits(d3.time.weeks)
                .elasticX(true)
                .elasticY(true)
                .clipPadding(10);

            var groupAll = ndx.groupAll().reduceSum(function(d) { return d.total; });
            counter
                .dimension({})
                .group(groupAll)
                .valueAccessor(function(x) { return x; });

            d3.select('#interval').on('change', function() {
                setup();
            });
            setup();

            dc.renderAll();

        });

      </script>

    </div>
  </body>
</html>
